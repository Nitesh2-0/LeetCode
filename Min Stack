class MinStack {
    Stack<Integer> st = new Stack<Integer>();
    Stack<Integer> mh = new Stack<Integer>();
    public MinStack() {
        //constructor 
    }
    
    public void push(int val) {
        if(st.size()==0){
            st.push(val); 
            mh.push(val);
        }
        else if(mh.peek() <= val){
            st.push(val); 
            mh.push(mh.peek());
        }
        else{
            st.push(val);
            mh.push(val);
        }
    }
    
    public void pop() {
        st.pop(); 
        mh.pop();
    }
    
    public int top() {
        if(st.size()==0) return -1;
        return st.peek();
    }
    
    public int getMin() {
        if(st.size()==0) return -1; 
        return mh.peek();
    }
}
